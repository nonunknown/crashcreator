[gd_scene load_steps=50 format=2]

[ext_resource path="res://level_editor/entities/ent_clock.tscn" type="PackedScene" id=1]
[ext_resource path="res://scripts/Editor/CrateManager.gd" type="Script" id=2]
[ext_resource path="res://scripts/Editor/PathManager.gd" type="Script" id=3]
[ext_resource path="res://resources/editor/crate.res" type="PackedScene" id=4]
[ext_resource path="res://scripts/Editor/EditorManager.gd" type="Script" id=5]
[ext_resource path="res://scripts/GUI/GUI_Manager.gd" type="Script" id=6]
[ext_resource path="res://gui/GUI_path_properties.tscn" type="PackedScene" id=7]
[ext_resource path="res://scripts/Editor/LevelManager.gd" type="Script" id=8]
[ext_resource path="res://gui/GUI_Menu.tscn" type="PackedScene" id=9]
[ext_resource path="res://gui/GUI_tools_path.tscn" type="PackedScene" id=10]
[ext_resource path="res://resources/gui/bt_gp_menu.tres" type="ButtonGroup" id=11]
[ext_resource path="res://scripts/GUI/GUI_Menu.gd" type="Script" id=12]
[ext_resource path="res://scripts/Editor/ProjectSave.gd" type="Script" id=13]
[ext_resource path="res://scripts/Editor/ProjectLoad.gd" type="Script" id=14]
[ext_resource path="res://scripts/Editor/ProjectNew.gd" type="Script" id=15]
[ext_resource path="res://scripts/Editor/EntityManager.gd" type="Script" id=16]
[ext_resource path="res://level_editor/entities/ent_end.tscn" type="PackedScene" id=17]
[ext_resource path="res://level_editor/entities/ent_start.tscn" type="PackedScene" id=18]
[ext_resource path="res://gui/GUI_tools_entity.tscn" type="PackedScene" id=19]
[ext_resource path="res://scripts/Editor/GUI_tools_entity.gd" type="Script" id=20]
[ext_resource path="res://scenes/bt_entity.gd" type="Script" id=21]
[ext_resource path="res://scripts/Editor/LevelBuilder.gd" type="Script" id=22]
[ext_resource path="res://scripts/Editor/TimeManager.gd" type="Script" id=23]
[ext_resource path="res://gui/GUI_tools_crate.tscn" type="PackedScene" id=24]
[ext_resource path="res://gui/GUI_Logger.tscn" type="PackedScene" id=25]
[ext_resource path="res://textures/gameplay/materials/mat_time_zero.material" type="Material" id=26]
[ext_resource path="res://textures/gameplay/materials/mat_time_one.material" type="Material" id=27]
[ext_resource path="res://textures/gameplay/materials/mat_time_two.material" type="Material" id=28]
[ext_resource path="res://textures/gameplay/materials/mat_time_three.material" type="Material" id=29]
[ext_resource path="res://scripts/Editor/SaveManager.gd" type="Script" id=30]
[ext_resource path="res://scripts/Editor/LoadManager.gd" type="Script" id=31]
[ext_resource path="res://gui/GUI_SaveLoad.tscn" type="PackedScene" id=32]
[ext_resource path="res://scripts/Editor/TerrainGenerator.gd" type="Script" id=34]
[ext_resource path="res://models/levels/shared/mat_grass.material" type="Material" id=35]
[ext_resource path="res://gui/GUI_Build.tscn" type="PackedScene" id=36]
[ext_resource path="res://gui/GUI_tools_enemies.tscn" type="PackedScene" id=37]
[ext_resource path="res://scripts/Editor/EnemyManager.gd" type="Script" id=38]

[sub_resource type="ButtonGroup" id=1]

[sub_resource type="ButtonGroup" id=2]

[sub_resource type="ButtonGroup" id=3]
resource_name = "gp_menu"

[sub_resource type="ButtonGroup" id=4]

[sub_resource type="GDScript" id=5]
script/source = "extends Button


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"

export var builder_path:NodePath
# Called when the node enters the scene tree for the first time.
func _ready():
	connect(\"pressed\",self,\"_on_pressed\")
	pass # Replace with function body.

func _on_pressed():
#	get_tree().change_scene(\"res://Lab.tscn\")
	get_node(builder_path).start()
# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass
"

[sub_resource type="GDScript" id=6]
script/source = "extends Button


export var gui_logger:NodePath
var logger
func _ready():
	connect(\"toggled\",self,\"_on_toggled\")
	logger = get_node(gui_logger)
	
func _on_toggled(pressed):
	if pressed:
		logger.visible = true
	else:
		logger.visible = false
"

[sub_resource type="ButtonGroup" id=7]

[sub_resource type="ButtonGroup" id=8]

[sub_resource type="ButtonGroup" id=9]

[sub_resource type="GDScript" id=10]
script/source = "extends GuiToolsBase

export var path_enemy_manager:NodePath
var enemy_manager

func _init():
	_ID = Utils.EDITOR_STATE.ENEMY

func _ready():
	enemy_manager = get_node(path_enemy_manager)	

func _on_btfrog_pressed():
	enemy_manager._on_set_enemy(0)
	pass # Replace with function body.


func _on_btknight_pressed():
	enemy_manager._on_set_enemy(1)
	pass # Replace with function body.
"

[sub_resource type="GDScript" id=11]
script/source = "
extends Camera

# User settings:
# General settings
export var enabled = true setget set_enabled
export(int, \"Visible\", \"Hidden\", \"Caputered, Confined\") var mouse_mode = 2

# Mouslook settings
export var mouselook = true
export (float, 0.0, 1.0) var sensitivity = 0.5
export (float, 0.0, 0.999, 0.001) var smoothness = 0.5 setget set_smoothness
export(NodePath) var privot setget set_privot
export var distance = 5.0 setget set_distance
export var rotate_privot = false
export var collisions = true setget set_collisions
export (int, 0, 360) var yaw_limit = 360
export (int, 0, 360) var pitch_limit = 360

# Movement settings
export var movement = true
export (float, 0.0, 1.0) var acceleration = 1.0
export (float, 0.0, 0.0, 1.0) var deceleration = 0.1
export var max_speed = Vector3(1.0, 1.0, 1.0)
export var local = true
export var forward_action = \"cam_fw\"
export var backward_action = \"cam_back\"
export var left_action = \"cam_left\"
export var right_action = \"cam_right\"
export var up_action = \"ui_page_up\"
export var down_action = \"ui_page_down\"

# Gui settings
export var use_gui = true
export var gui_action = \"ui_cancel\"

# Intern variables.
var _mouse_position = Vector2(0.0, 0.0)
var _yaw = 0.0
var _pitch = 0.0
var _total_yaw = 0.0
var _total_pitch = 0.0

var _direction = Vector3(0.0, 0.0, 0.0)
var _speed = Vector3(0.0, 0.0, 0.0)
var _gui

func _ready():
	_check_actions([forward_action, backward_action, left_action, right_action, gui_action, up_action, down_action])

	if privot:
		privot = get_node(privot)
	else:
		privot = null

	set_enabled(enabled)

	if use_gui:
		_gui = preload(\"../camera_control_gui.gd\")
		_gui = _gui.new(self, gui_action)
		add_child(_gui)

func _input(event):
	if event is InputEventMouseButton:
		if event.button_index == BUTTON_RIGHT:
			mouselook = !mouselook
	if mouselook:
		if event is InputEventMouseMotion:
			_mouse_position = event.relative

	if movement:
		if event.is_action_pressed(forward_action):
			_direction.z = -1
		elif event.is_action_pressed(backward_action):
			_direction.z = 1
		elif not Input.is_action_pressed(forward_action) and not Input.is_action_pressed(backward_action):
			_direction.z = 0

		if event.is_action_pressed(left_action):
			_direction.x = -1
		elif event.is_action_pressed(right_action):
			_direction.x = 1
		elif not Input.is_action_pressed(left_action) and not Input.is_action_pressed(right_action):
			_direction.x = 0
			
		if event.is_action_pressed(up_action):
			_direction.y = 1
		if event.is_action_pressed(down_action):
			_direction.y = -1
		elif not Input.is_action_pressed(up_action) and not Input.is_action_pressed(down_action):
			_direction.y = 0



func _process(delta):
	if privot:
		_update_distance()
	if mouselook:
		_update_mouselook()
	if movement:
		_update_movement(delta)

func _physics_process(delta):
	# Called when collision are enabled
	_update_distance()
	if mouselook:
		_update_mouselook()

	var space_state = get_world().get_direct_space_state()
	var obstacle = space_state.intersect_ray(privot.get_translation(),  get_translation())
	if not obstacle.empty():
		set_translation(obstacle.position)

func _update_movement(delta):
	var offset = max_speed * acceleration * _direction
	
	_speed.x = clamp(_speed.x + offset.x, -max_speed.x, max_speed.x)
	_speed.y = clamp(_speed.y + offset.y, -max_speed.y, max_speed.y)
	_speed.z = clamp(_speed.z + offset.z, -max_speed.z, max_speed.z)
	
	# Apply deceleration if no input
	if _direction.x == 0:
		_speed.x *= (1.0 - deceleration)
	if _direction.y == 0:
		_speed.y *= (1.0 - deceleration)
	if _direction.z == 0:
		_speed.z *= (1.0 - deceleration)

	if local:
		translate(_speed * delta)
	else:
		global_translate(_speed * delta)

func _update_mouselook():
	_mouse_position *= sensitivity
	_yaw = _yaw * smoothness + _mouse_position.x * (1.0 - smoothness)
	_pitch = _pitch * smoothness + _mouse_position.y * (1.0 - smoothness)
	_mouse_position = Vector2(0, 0)

	if yaw_limit < 360:
		_yaw = clamp(_yaw, -yaw_limit - _total_yaw, yaw_limit - _total_yaw)
	if pitch_limit < 360:
		_pitch = clamp(_pitch, -pitch_limit - _total_pitch, pitch_limit - _total_pitch)

	_total_yaw += _yaw
	_total_pitch += _pitch

	if privot:
		var target = privot.get_translation()
		var offset = get_translation().distance_to(target)

		set_translation(target)
		rotate_y(deg2rad(-_yaw))
		rotate_object_local(Vector3(1,0,0), deg2rad(-_pitch))
		translate(Vector3(0.0, 0.0, offset))

		if rotate_privot:
			privot.rotate_y(deg2rad(-_yaw))
	else:
		rotate_y(deg2rad(-_yaw))
		rotate_object_local(Vector3(1,0,0), deg2rad(-_pitch))

func _update_distance():
	var t = privot.get_translation()
	t.z -= distance
	set_translation(t)

func _update_process_func():
	# Use physics process if collision are enabled
	if collisions and privot:
		set_physics_process(true)
		set_process(false)
	else:
		set_physics_process(false)
		set_process(true)

func _check_actions(actions=[]):
	if OS.is_debug_build():
		for action in actions:
			if not InputMap.has_action(action):
				print('WARNING: No action \"' + action + '\"')

func set_privot(value):
	privot = value
	# TODO: fix parenting.
#	if privot:
#		if get_parent():
#			get_parent().remove_child(self)
#		privot.add_child(self)
	_update_process_func()

func set_collisions(value):
	collisions = value
	_update_process_func()

func set_enabled(value):
	enabled = value
	if enabled:
		Input.set_mouse_mode(mouse_mode)
		set_process_input(true)
		_update_process_func()
	else:
		set_process(false)
		set_process_input(false)
		set_physics_process(false)

func set_smoothness(value):
	smoothness = clamp(value, 0.001, 0.999)

func set_distance(value):
	distance = max(0, value)
"

[sub_resource type="OpenSimplexNoise" id=12]
seed = 100
octaves = 2
period = 47.0
persistence = 0.25
lacunarity = 2.11

[node name="Main" type="Node" groups=[
"current",
]]
script = ExtResource( 5 )

[node name="Builder" type="Node" parent="."]
script = ExtResource( 22 )
level_path = NodePath("../Level")

[node name="GUI" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
script = ExtResource( 6 )
__meta__ = {
"_edit_use_anchors_": false
}
bts_menu = ExtResource( 11 )

[node name="GUI_Menu" parent="GUI" instance=ExtResource( 9 )]
script = ExtResource( 12 )

[node name="bt_edit_new" parent="GUI/GUI_Menu/HBoxContainer" index="0" groups=[
"project_new",
]]
disabled = false
script = ExtResource( 15 )

[node name="bt_edit_save" parent="GUI/GUI_Menu/HBoxContainer" index="1" groups=[
"project_save",
]]
disabled = false
script = ExtResource( 13 )

[node name="bt_edit_load" parent="GUI/GUI_Menu/HBoxContainer" index="2" groups=[
"project_load",
]]
disabled = false
script = ExtResource( 14 )

[node name="bt_edit_path" parent="GUI/GUI_Menu/HBoxContainer" index="4"]
group = SubResource( 1 )

[node name="bt_edit_crate" parent="GUI/GUI_Menu/HBoxContainer" index="5"]
group = SubResource( 1 )

[node name="bt_edit_item" parent="GUI/GUI_Menu/HBoxContainer" index="6"]
group = SubResource( 2 )

[node name="bt_edit_entity" parent="GUI/GUI_Menu/HBoxContainer" index="7"]
group = SubResource( 3 )

[node name="bt_edit_enemy" parent="GUI/GUI_Menu/HBoxContainer" index="8"]
group = SubResource( 2 )

[node name="bt_edit_time" parent="GUI/GUI_Menu/HBoxContainer" index="9"]
group = SubResource( 2 )

[node name="bt_edit_light" parent="GUI/GUI_Menu/HBoxContainer" index="11"]
group = SubResource( 2 )

[node name="bt_edit_play" parent="GUI/GUI_Menu/HBoxContainer" index="12"]
disabled = false
group = SubResource( 4 )
script = SubResource( 5 )
builder_path = NodePath("../../../../Builder")

[node name="bt_edit_export" parent="GUI/GUI_Menu/HBoxContainer" index="13"]
disabled = false
group = SubResource( 4 )

[node name="bt_edit_settings" parent="GUI/GUI_Menu/HBoxContainer" index="15"]
group = SubResource( 2 )

[node name="bt_output" parent="GUI/GUI_Menu/HBoxContainer" index="16"]
script = SubResource( 6 )
gui_logger = NodePath("../../../GUI_Logger")

[node name="GUI_path_properties" parent="GUI" instance=ExtResource( 7 )]
visible = false
margin_top = 29.0
mouse_default_cursor_shape = 2

[node name="GUI_tools_path" parent="GUI" groups=[
"gui_tool",
] instance=ExtResource( 10 )]
visible = false
margin_top = 27.0
mouse_filter = 2
tool_id = 3

[node name="bt_add" parent="GUI/GUI_tools_path/Panel/VBoxContainer" index="0"]
disabled = true

[node name="bt_remove" parent="GUI/GUI_tools_path/Panel/VBoxContainer" index="1"]
disabled = true

[node name="GridContainer" parent="GUI/GUI_tools_path/TabContainer/Built-in/VBoxContainer" index="0"]
margin_bottom = 20.0

[node name="bt_base" parent="GUI/GUI_tools_path/TabContainer/Built-in/VBoxContainer/GridContainer" index="0"]
visible = true
group = SubResource( 7 )
gui_tools_path = NodePath("../../../../..")

[node name="GUI_tools_crate" parent="GUI" groups=[
"gui_tool",
] instance=ExtResource( 24 )]
visible = false

[node name="bt_crate_base" parent="GUI/GUI_tools_crate/TabContainer/basic/GridContainer" index="0"]
group = SubResource( 8 )

[node name="bt_crate_normal" parent="GUI/GUI_tools_crate/TabContainer/basic/GridContainer" index="1"]
group = SubResource( 8 )

[node name="bt_crate_checkpoint" parent="GUI/GUI_tools_crate/TabContainer/basic/GridContainer" index="2"]
group = SubResource( 9 )

[node name="bt_crate_jump" parent="GUI/GUI_tools_crate/TabContainer/basic/GridContainer" index="3"]
group = SubResource( 9 )

[node name="bt_crate_enforced" parent="GUI/GUI_tools_crate/TabContainer/basic/GridContainer" index="4"]
group = SubResource( 9 )

[node name="bt_crate_wumpa" parent="GUI/GUI_tools_crate/TabContainer/basic/GridContainer" index="5"]
group = SubResource( 9 )

[node name="bt_crate_aku" parent="GUI/GUI_tools_crate/TabContainer/items/GridContainer" index="0"]
group = SubResource( 9 )

[node name="bt_crate_life" parent="GUI/GUI_tools_crate/TabContainer/items/GridContainer" index="1"]
group = SubResource( 9 )

[node name="bt_crate_tnt" parent="GUI/GUI_tools_crate/TabContainer/explosives/GridContainer" index="0"]
group = SubResource( 9 )

[node name="bt_crate_nitro" parent="GUI/GUI_tools_crate/TabContainer/explosives/GridContainer" index="1"]
group = SubResource( 9 )

[node name="GUI_tools_enemy" parent="GUI" instance=ExtResource( 37 )]
visible = false
script = SubResource( 10 )
path_enemy_manager = NodePath("../../Level/Enemy")

[node name="Viewport" parent="GUI/GUI_tools_enemy/TabContainer/Enemies/GridContainer/MeshButton/ViewportContainer" index="0"]
render_target_update_mode = 0

[node name="Viewport" parent="GUI/GUI_tools_enemy/TabContainer/Enemies/GridContainer/MeshButton2/ViewportContainer" index="0"]
render_target_update_mode = 0

[node name="GUI_tools_entity" parent="GUI" instance=ExtResource( 19 )]
visible = false
margin_top = 29.0
script = ExtResource( 20 )

[node name="bt_entity_start" parent="GUI/GUI_tools_entity/VBoxContainer" index="0"]
script = ExtResource( 21 )
_ID = 0

[node name="bt_entity_end" parent="GUI/GUI_tools_entity/VBoxContainer" index="1"]
script = ExtResource( 21 )
_ID = 1

[node name="bt_entity_time" parent="GUI/GUI_tools_entity/VBoxContainer" index="2"]
script = ExtResource( 21 )
_ID = 2

[node name="GUI_SaveLoad" parent="GUI" instance=ExtResource( 32 )]
visible = false

[node name="SaveDialog" parent="GUI/GUI_SaveLoad" index="0"]
script = ExtResource( 30 )

[node name="LoadDialog" parent="GUI/GUI_SaveLoad" index="1"]
script = ExtResource( 31 )
level_path = NodePath("../../../Level")

[node name="GUI_Build" parent="GUI" instance=ExtResource( 36 )]
visible = false

[node name="GUI_Logger" parent="GUI" instance=ExtResource( 25 )]
visible = false
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 377.0
margin_top = 29.0
margin_right = 0.0
margin_bottom = -358.0

[node name="Camera" type="Camera" parent="." groups=[
"dont_save",
]]
transform = Transform( -0.999518, -0.0116422, 0.0287952, -0.00343725, 0.962859, 0.269983, -0.0308689, 0.269754, -0.962434, -0.316168, 2.38472, -3.81545 )
current = true
script = SubResource( 11 )
mouse_mode = 0
mouselook = false
max_speed = Vector3( 50, 50, 50 )

[node name="Level" type="Spatial" parent="." groups=[
"gp_level",
]]
script = ExtResource( 8 )

[node name="Path" type="Spatial" parent="Level" groups=[
"path_manager",
"save",
]]
script = ExtResource( 3 )

[node name="Crate" type="Spatial" parent="Level" groups=[
"crate_manager",
"save",
]]
script = ExtResource( 2 )
crate_model = ExtResource( 4 )
main_path = NodePath("../..")

[node name="Entity" type="Spatial" parent="Level" groups=[
"entity_manager",
]]
script = ExtResource( 16 )
entity_start = ExtResource( 18 )
entity_finish = ExtResource( 17 )
entity_clock = ExtResource( 1 )

[node name="Time" type="Spatial" parent="Level"]
script = ExtResource( 23 )
mat_time_zero = ExtResource( 26 )
mat_time_one = ExtResource( 27 )
mat_time_two = ExtResource( 29 )
mat_time_three = ExtResource( 28 )

[node name="Terrain" type="Spatial" parent="Level"]
script = ExtResource( 34 )
material = ExtResource( 35 )
y_multiplier = 30.0
noise = SubResource( 12 )
draw_vertexes = true

[node name="Enemy" type="Spatial" parent="Level" groups=[
"enemy_manager",
]]
script = ExtResource( 38 )
[connection signal="pressed" from="GUI/GUI_Menu/HBoxContainer/bt_edit_new" to="GUI/GUI_Menu" method="_on_bt_edit_new_pressed"]
[connection signal="pressed" from="GUI/GUI_Menu/HBoxContainer/bt_edit_save" to="GUI/GUI_Menu" method="_on_bt_edit_save_pressed"]
[connection signal="pressed" from="GUI/GUI_Menu/HBoxContainer/bt_edit_load" to="GUI/GUI_Menu" method="_on_bt_edit_load_pressed"]
[connection signal="toggled" from="GUI/GUI_Menu/HBoxContainer/bt_edit_path" to="GUI/GUI_Menu" method="_on_bt_edit_path_toggled"]
[connection signal="toggled" from="GUI/GUI_Menu/HBoxContainer/bt_edit_crate" to="GUI/GUI_Menu" method="_on_bt_edit_crate_toggled"]
[connection signal="toggled" from="GUI/GUI_Menu/HBoxContainer/bt_edit_item" to="GUI/GUI_Menu" method="_on_bt_edit_item_toggled"]
[connection signal="toggled" from="GUI/GUI_Menu/HBoxContainer/bt_edit_entity" to="GUI/GUI_Menu" method="_on_bt_edit_entity_toggled"]
[connection signal="toggled" from="GUI/GUI_Menu/HBoxContainer/bt_edit_enemy" to="GUI/GUI_Menu" method="_on_bt_edit_enemy_toggled"]
[connection signal="toggled" from="GUI/GUI_Menu/HBoxContainer/bt_edit_time" to="GUI/GUI_Menu" method="_on_bt_edit_time_toggled"]
[connection signal="pressed" from="GUI/GUI_Menu/HBoxContainer/bt_edit_export" to="GUI/GUI_Menu" method="_on_bt_edit_export_pressed"]
[connection signal="pressed" from="GUI/GUI_tools_path/Panel/VBoxContainer/bt_add" to="Level/Path" method="_on_bt_add_pressed"]
[connection signal="pressed" from="GUI/GUI_tools_enemy/TabContainer/Enemies/GridContainer/MeshButton/Button" to="GUI/GUI_tools_enemy" method="_on_btknight_pressed"]
[connection signal="pressed" from="GUI/GUI_tools_enemy/TabContainer/Enemies/GridContainer/MeshButton2/Button" to="GUI/GUI_tools_enemy" method="_on_btfrog_pressed"]

[editable path="GUI/GUI_Menu"]

[editable path="GUI/GUI_tools_path"]

[editable path="GUI/GUI_tools_crate"]

[editable path="GUI/GUI_tools_enemy"]

[editable path="GUI/GUI_tools_entity"]

[editable path="GUI/GUI_SaveLoad"]
